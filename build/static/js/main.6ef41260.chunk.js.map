{"version":3,"sources":["components/Place.js","components/Notification.js","components/Footer.js","services/places.js","services/login.js","App.js","index.js"],"names":["Place","place","deletePlace","Card","style","width","Body","Title","name","Text","description","location","onClick","id","Notification","message","className","Footer","color","fontStyle","fontSize","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","remove","console","log","authoriz","request","delete","setToken","newToken","login","credentials","App","useState","places","setPlaces","newName","setNewName","newDescription","setNewDescription","newLocation","setNewLocation","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","placeService","initialPlaces","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","confirm","filter","handleNameChange","target","value","handleDescriptionChange","handleLocationChange","addPlace","placeObject","date","Date","toISOString","length","concat","onSubmit","type","onChange","CardDeck","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ef41260.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Place = ({ place, deletePlace }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<Card style={{ width: '30px' }}>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Card.Title>{place.name}</Card.Title>\r\n\t\t\t\t<Card.Text>{place.description}</Card.Text>\r\n\t\t\t\t<Card.Text>{place.location}</Card.Text>\r\n\t\t\t\t<button onClick={deletePlace(place.id, place.name)}>delete</button>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Place","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message == null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Csepregis Social app, be together no matter where we are</em>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/places'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\r\n\tconst response = await axios.post(baseUrl, newObject, config)\r\n\treturn response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst remove = async (id, name) => {\r\n\tconsole.log(id);\r\n\tconst authoriz = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\tconst request = axios.delete(`${baseUrl}/${id}`, authoriz);\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Place from './components/Place'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport placeService from './services/places'\nimport loginService from './services/login'\nimport { CardDeck } from 'react-bootstrap'\n\nconst App = () => {\n  const [places, setPlaces] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newDescription, setNewDescription] = useState('')\n  const [newLocation, setNewLocation] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    placeService\n      .getAll()\n      .then(initialPlaces => setPlaces(initialPlaces))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPlaceappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      placeService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedPlaceappUser', JSON.stringify(user)\n      )\n\n      placeService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      setErrorMessage('Wrong Credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  //updating the placelist to render once blog has been deleted\n  const deletePlace = (id, name) => {\n    return () => {\n      if (window.confirm(`Delete ${name}`)) {\n        placeService.remove(id, name).then(() => {\n          setPlaces(places.filter(place => place.id !== id))\n        })\n      }\n    }\n  }\n\n  const rows = () => places.map(place => <Place key={place.id} place={place} deletePlace={deletePlace} />)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleDescriptionChange = (event) => {\n    setNewDescription(event.target.value)\n  }\n\n  const handleLocationChange = (event) => {\n    setNewLocation(event.target.value)\n  }\n\n  const addPlace = (event) => {\n    event.preventDefault()\n    const placeObject = {\n      name: newName,\n      description: newDescription,\n      location: newLocation,\n      date: new Date().toISOString(),\n      id: places.length + 1,\n    }\n\n    placeService\n      .create(placeObject)\n      .then(data => {\n        setPlaces(places.concat(data))\n        setNewName('')\n        setNewDescription('')\n        setNewLocation('')\n      })\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type='text'\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type='password'\n          value={password}\n          name=\"password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  const placeForm = () => (\n    <form onSubmit={addPlace}>\n      <div>\n        <label>\n          Name\n          <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Description\n          <input\n            value={newDescription}\n            onChange={handleDescriptionChange}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Location\n          <input\n            value={newLocation}\n            onChange={handleLocationChange}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">save</button>\n    </form>\n  )\n\n  return (\n    <div>\n      <h1>Shared places</h1>\n\n      <Notification message={errorMessage} />\n      <h2>Login</h2>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {placeForm()}\n        </div>\n      }\n      <div>\n      </div>\n      <h2>Locations</h2>\n      <CardDeck>\n        {rows()}\n      </CardDeck>\n\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}