{"version":3,"sources":["components/Place.js","components/Notification.js","components/Footer.js","services/places.js","App.js","index.js"],"names":["Place","place","Card","style","width","Body","Title","name","Text","description","location","Notification","message","className","Footer","color","fontStyle","fontSize","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","App","useState","places","setPlaces","newName","setNewName","newDescription","setNewDescription","newLocation","setNewLocation","errorMessage","useEffect","placeService","initialPlaces","CardDeck","map","key","onSubmit","event","preventDefault","placeObject","Date","toISOString","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mPAgBeA,EAbD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhB,OACC,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SACrB,kBAACF,EAAA,EAAKG,KAAN,KACC,kBAACH,EAAA,EAAKI,MAAN,KAAaL,EAAMM,MACnB,kBAACL,EAAA,EAAKM,KAAN,KAAYP,EAAMQ,aAClB,kBAACP,EAAA,EAAKM,KAAN,KAAYP,EAAMS,aCIPC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAe,MAAXA,EACI,KAIP,yBAAKC,UAAU,SACbD,ICQWE,EAfA,WAOd,OACC,yBAAKX,MAPc,CACnBY,MAAO,QACPC,UAAW,SACXC,SAAU,KAKT,6BACA,0F,gBCaY,EAtBA,WACd,IAAMC,EAAUC,IAAMC,IAHP,eAITC,EAAc,CACnBC,GAAI,IACJf,KAAM,mCACNE,YAAa,QACbC,SAAU,UACVa,KAAM,4BAEP,OAAOL,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAavC,EAVA,SAAAO,GAEd,OADgBT,IAAMU,KAfP,cAeqBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,QCoF3BI,EA9FH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAG4BJ,mBAAS,IAHrC,mBAGTK,EAHS,KAGOC,EAHP,OAIsBN,mBAAS,IAJ/B,mBAITO,EAJS,KAIIC,EAJJ,OAKwBR,mBAAS,MALjC,mBAKTS,EALS,UAOhBC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GAAa,OAAIV,EAAUU,QAClC,IAoCH,OACE,6BACE,6CAEA,kBAAC,EAAD,CAAc/B,QAAS4B,IAEvB,8BAEA,kBAACI,EAAA,EAAD,KA1CeZ,EAAOa,KAAI,SAAA5C,GAAK,OAAI,kBAAC,EAAD,CAAO6C,IAAK7C,EAAMqB,GAAIrB,MAAOA,QA6ChE,0BAAM8C,SA/BO,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAc,CAClB3C,KAAM2B,EACNzB,YAAa2B,EACb1B,SAAU4B,EACVf,MAAM,IAAI4B,MAAOC,cACjB9B,GAAIU,EAAOqB,OAAS,GAGtBX,EACUQ,GACP1B,MAAK,SAAAE,GACJO,EAAUD,EAAOL,OAAOD,IACxBS,EAAW,IACXE,EAAkB,IAClBE,EAAe,SAgBf,6BACE,sCAEA,2BACIe,MAAOpB,EACPqB,SAjDa,SAACP,GACxBb,EAAWa,EAAMQ,OAAOF,YAoDpB,6BACE,6CAEA,2BACIA,MAAOlB,EACPmB,SAtDoB,SAACP,GAC/BX,EAAkBW,EAAMQ,OAAOF,YAyD3B,6BACE,0CAEA,2BACIA,MAAOhB,EACPiB,SA3DiB,SAACP,GAC5BT,EAAeS,EAAMQ,OAAOF,YA8DxB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,Q,MC1FNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7caaa1ef.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Place = ({ place }) => {\r\n\r\n\treturn (\r\n\t\t<Card style={{ width: '30px' }}>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Card.Title>{place.name}</Card.Title>\r\n\t\t\t\t<Card.Text>{place.description}</Card.Text>\r\n\t\t\t\t<Card.Text>{place.location}</Card.Text>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Place","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message == null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Csepregis Social app, be together no matter where we are</em>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/places'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\tconst nonExisting = {\r\n\t\tid: 10000,\r\n\t\tname: 'This note is not saved to server',\r\n\t\tdescription: 'hello',\r\n\t\tlocation: 'palermo',\r\n\t\tdate: '2019-05-30T17:30:31.098Z'\r\n\t}\r\n\treturn request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Place from './components/Place'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport placeService from './services/places'\nimport { CardDeck } from 'react-bootstrap'\n\nconst App = () => {\n  const [places, setPlaces] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newDescription, setNewDescription] = useState('')\n  const [newLocation, setNewLocation] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    placeService\n      .getAll()\n      .then(initialPlaces => setPlaces(initialPlaces))\n  }, [])\n\n  const rows = () => places.map(place => <Place key={place.id} place={place} />)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleDescriptionChange = (event) => {\n    setNewDescription(event.target.value)\n  }\n\n  const handleLocationChange = (event) => {\n    setNewLocation(event.target.value)\n  }\n\n  const addPlace = (event) => {\n    event.preventDefault()\n    const placeObject = {\n      name: newName,\n      description: newDescription,\n      location: newLocation,\n      date: new Date().toISOString(),\n      id: places.length + 1,\n    }\n\n    placeService\n      .create(placeObject)\n      .then(data => {\n        setPlaces(places.concat(data))\n        setNewName('')\n        setNewDescription('')\n        setNewLocation('')\n      })\n  }\n\n  return (\n    <div>\n      <h1>Shared places</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n      </div>\n      <CardDeck>\n        {rows()}\n      </CardDeck>\n      <form onSubmit={addPlace}>\n        <div>\n          <label>\n            Name\n          <input\n              value={newName}\n              onChange={handleNameChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Description\n          <input\n              value={newDescription}\n              onChange={handleDescriptionChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Location\n          <input\n              value={newLocation}\n              onChange={handleLocationChange}\n            />\n          </label>\n        </div>\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}