{"version":3,"sources":["components/Place.js","components/Notification.js","components/Footer.js","services/places.js","services/login.js","components/LoginForm.js","components/PlaceForm.js","components/Togglable.js","App.js","index.js"],"names":["Place","place","deletePlace","Card","style","width","Body","Title","name","Text","description","location","onClick","id","Notification","message","className","Footer","color","fontStyle","fontSize","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","remove","console","log","authoriz","request","delete","setToken","newToken","login","credentials","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","onChange","PlaceForm","logOut","handleNameChange","handleDescriptionChange","handleLocationChange","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","App","places","setPlaces","newName","setNewName","newDescription","setNewDescription","newLocation","setNewLocation","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","loginVisible","setLoginVisible","useEffect","placeService","initialPlaces","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","confirm","filter","removeItem","target","addPlace","placeObject","date","Date","toISOString","length","concat","loginForm","CardDeck","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6e53505.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Place = ({ place, deletePlace }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<Card style={{ width: '30px' }}>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Card.Title>{place.name}</Card.Title>\r\n\t\t\t\t<Card.Text>{place.description}</Card.Text>\r\n\t\t\t\t<Card.Text>{place.location}</Card.Text>\r\n\t\t\t\t<button onClick={deletePlace(place.id, place.name)}>delete</button>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Place","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message == null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Csepregis Social app, be together no matter where we are</em>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/places'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\r\n\tconst response = await axios.post(baseUrl, newObject, config)\r\n\treturn response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst remove = async (id, name) => {\r\n\tconsole.log(id);\r\n\tconst authoriz = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\tconst request = axios.delete(`${baseUrl}/${id}`, authoriz);\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n\thandleSubmit,\r\n\thandleUsernameChange,\r\n\thandlePasswordChange,\r\n\tusername,\r\n\tpassword\r\n}) => {\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tusername\r\n        <input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tname=\"Username\"\r\n\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tpassword\r\n        <input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\">login</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport Place from './Place'\r\n\r\nconst PlaceForm = ({ onSubmit, logOut, handleNameChange, handleDescriptionChange, handleLocationChange, name, description, location }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={logOut}>Logout</button>\r\n\t\t\t<h2>post a new Place</h2>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tName\r\n          <input\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={handleNameChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tDescription\r\n          <input\r\n\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\tonChange={handleDescriptionChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tLocation\r\n          <input\r\n\t\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\t\tonChange={handleLocationChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\">save</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PlaceForm","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n\tconst [visible, setVisible] = useState(false)\r\n\r\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\r\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n\tconst toggleVisibility = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={hideWhenVisible}>\r\n\t\t\t\t<button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n\t\t\t\t<button onClick={props.logOut}>Logout</button>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<button onClick={toggleVisibility}>cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Togglable","import React, { useState, useEffect } from 'react'\nimport Place from './components/Place'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport placeService from './services/places'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport PlaceForm from './components/PlaceForm'\nimport { CardDeck } from 'react-bootstrap'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [places, setPlaces] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newDescription, setNewDescription] = useState('')\n  const [newLocation, setNewLocation] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  useEffect(() => {\n    placeService\n      .getAll()\n      .then(initialPlaces => setPlaces(initialPlaces))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPlaceappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      placeService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedPlaceappUser', JSON.stringify(user)\n      )\n\n      placeService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      setErrorMessage('Wrong Credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  //updating the placelist to render once blog has been deleted\n  const deletePlace = (id, name) => {\n    return () => {\n      if (window.confirm(`Delete ${name}`)) {\n        placeService.remove(id, name).then(() => {\n          setPlaces(places.filter(place => place.id !== id))\n        })\n      }\n    }\n  }\n\n  const logOut = async () => {\n    await window.localStorage.removeItem('loggedPlaceappUser');\n    setUser(null)\n  }\n\n  const rows = () => places.map(place => <Place key={place.id} place={place} deletePlace={deletePlace} />)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleDescriptionChange = (event) => {\n    setNewDescription(event.target.value)\n  }\n\n  const handleLocationChange = (event) => {\n    setNewLocation(event.target.value)\n  }\n\n  const addPlace = (event) => {\n    event.preventDefault()\n    const placeObject = {\n      name: newName,\n      description: newDescription,\n      location: newLocation,\n      date: new Date().toISOString(),\n      id: places.length + 1,\n    }\n\n    placeService\n      .create(placeObject)\n      .then(data => {\n        setPlaces(places.concat(data))\n        setNewName('')\n        setNewDescription('')\n        setNewLocation('')\n      })\n  }\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            handleSubmit={handleLogin}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            username={username}\n            password={password}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const placeForm = () => (\n    <Togglable buttonLabel=\"new place\" logOut={logOut}>\n      <PlaceForm\n        onSubmit={addPlace}\n        handleNameChange={handleNameChange}\n        handleDescriptionChange={handleDescriptionChange}\n        handleLocationChange={handleLocationChange}\n        name={newName}\n        description={newDescription}\n        location={newLocation}\n        logOut={logOut}\n      />\n    </Togglable>\n\n  )\n\n  return (\n    <div>\n      <h1>Shared places</h1>\n\n      <Notification message={errorMessage} />\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {placeForm()}\n        </div>\n      }\n      <div>\n      </div>\n      <h2>Locations</h2>\n      <CardDeck>\n        {rows()}\n      </CardDeck>\n\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}